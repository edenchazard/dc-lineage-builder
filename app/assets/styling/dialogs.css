.dialog-container,
.dialog-overlay {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.dialog-container {
  z-index: 1000;
  display: flex;

  > .dialog-overlay {
    z-index: 1002;
    background: rgba(0, 0, 0, 0.5);
    transition: opacity 1s;
    opacity: 0;
  }

  > .dialog-content {
    margin: auto;
    z-index: 1004;
    width: 100%;
    max-width: 31.25rem;
    max-height: 31rem;

    > .dialog {
      opacity: 0;
      transform: translateY(20%);
      transition:
        transform 0.5s linear 0.5s,
        opacity 0.5s linear 0.5s;
      box-shadow: 0 3px 10px rgba(0, 0, 0, 0.5);
    }
  }
}

.dialog-buttons {
  right: 5px;
  position: absolute;
  top: -1.5rem;

  > .button {
    height: 3rem;
    width: 3rem;
    display: flex;
    align-items: center;
    justify-content: space-around;
    flex-direction: column;
    border-radius: 50%;
    cursor: pointer;

    &.transition {
      transform: scale(0, 0);
      transition: transform 500ms linear 300ms;
    }

    &.close-button {
      border: none;
      background: var(--dialog-header-closebutton-bg);
      color: #fff;
    }
  }
}

.dialog-header,
.dialog-main {
  padding: 0.75rem;
}

.dialog-header {
  position: relative;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  gap: 1rem;
  /* background: #44300b; */
  background: var(--dialog-header-bg);
  /* color: #fff; */
  color: var(--dialog-header-fg);
  font: var(--dialog-header-font);
  /* border-radius: 0.3rem 0.3rem 0 0; */
  padding: 0.5rem 1rem;
}

.dialog-header-title {
  font-size: 1.5em;
  margin: 0px;
}

.dialog-main {
  background: var(--dialog-body-bg);
  color: var(--dialog-body-fg);
}

.dialog-footer {
  text-align: right;
  background: var(--dialog-body-bg);
  padding: 0.5rem;

  & .dialog-footer-button {
    padding: 0.5rem 1rem;
    background: var(--dialog-footer-button-bg);
    border: none;
    color: var(--dialog-footer-button-fg);
    /* border-radius: 0.3rem; */
  }
}

/* animations */
.dialog-container:not([aria-hidden]) {
  > .dialog-overlay {
    opacity: 1;
  }

  .dialog-content .dialog {
    opacity: 1;
    transform: translateY(0%);
  }

  .button {
    transform: scale(100%, 100%);
  }
}

@media (prefers-reduced-motion) {
  .dialog-container {
    > .dialog-overlay,
    .dialog-content,
    .button {
      transition: none;
    }
  }
}

/** vendor cleanup  */

/* I don't like the way the title's been implemented, it makes the css
a little difficult, so we're opting to provide the info it needs but
hide it visually, while recreating it inside the actual dialog slot, where we
have more control */
.dialog-title {
  border: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
  -webkit-clip-path: inset(50%) !important;
  clip-path: inset(50%) !important;
  height: 1px !important;
  overflow: hidden !important;
  margin: -1px !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
  white-space: nowrap !important;
}
