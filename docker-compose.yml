services:
  app:
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    command: npm run dev
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=${MYSQL_HOST}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - VITE_BASE_URL=${VITE_BASE_URL}
      - LINEAGE_HASH_SALT=${LINEAGE_HASH_SALT}
    ports:
      - 5173:5173
      - 3000:3000
    depends_on:
      - db
    networks:
      - internal

  db:
    image: mariadb:10
    tty: true
    volumes:
      - dbdata:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - 3306:3306
    networks:
      - internal

  testapp:
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    command: sleep infinity
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env.testing
    depends_on:
      testdb:
        condition: service_healthy
    networks:
      - testing

  testdb:
    image: mariadb:10
    tty: true
    env_file:
      - .env.testing
    networks:
      - testing
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 10s
      interval: 5s
      timeout: 5s
      retries: 4

volumes:
  dbdata:

networks:
  internal:
  testing:
